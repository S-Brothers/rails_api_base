FORMAT: 1A
# Rails API Base

# Group Passwords

## Update Password [api/v1/users/password]

### Update [PUT]

+ Request Bad

    + Headers

            Access-Token: 1234567890123456789012
            Client: abcdefghijklmnopqrstuv
            Uid: ira@bartoletti.net

    + Body

            {"password":"123456789","password_confirmation":""}

+ Response 422 ()

    + Headers

            access-token: 1234567890123456789012
            token-type: Bearer
            client: abcdefghijklmnopqrstuv
            expiry: 1671637128
            uid: ira@bartoletti.net

    + Body

            {
              "success": false,
              "errors": {
                "password_confirmation": [
                  "doesn't match Password"
                ],
                "full_messages": [
                  "Password confirmation doesn't match Password"
                ]
              }
            }

+ Request Ok

    + Headers

            Access-Token: 1234567890123456789012
            Client: abcdefghijklmnopqrstuv
            Uid: korey@hamill-torphy.name

    + Body

            {"password":"123456789","password_confirmation":"123456789"}

+ Response 200 ()

    + Headers

            access-token: 1234567890123456789012
            token-type: Bearer
            client: abcdefghijklmnopqrstuv
            expiry: 1671637127
            uid: korey@hamill-torphy.name

    + Body

            {
              "success": true,
              "data": {
                "id": 11,
                "provider": "email",
                "allow_password_change": false,
                "email": "korey@hamill-torphy.name",
                "uid": "korey@hamill-torphy.name",
                "first_name": "Jerry Hodkiewicz",
                "last_name": "King",
                "username": "cami",
                "created_at": "2020-12-21T15:38:47.912Z",
                "updated_at": "2020-12-21T15:38:48.045Z"
              },
              "message": "Your password has been successfully updated."
            }

## Create Password [api/v1/users/password]

### Create [POST]

+ Request Bad

    + Headers

            Access-Token: 1234567890123456789012
            Client: abcdefghijklmnopqrstuv
            Uid: kym_batz@sawayn.org

    + Body

            {"email":"notvalid@example.com"}

+ Response 404 ()

    + Body

            {
              "success": false,
              "errors": [
                "Unable to find user with email 'notvalid@example.com'."
              ]
            }

+ Request Ok

    + Headers

            Access-Token: 1234567890123456789012
            Client: abcdefghijklmnopqrstuv
            Uid: zana.crona@pacocha.name

    + Body

            {"email":"zana.crona@pacocha.name"}

+ Response 200 ()

    + Body

            {
              "success": true,
              "message": "An email has been sent to 'zana.crona@pacocha.name' containing instructions for resetting your password."
            }

## Edit Password [api/v1/users/password/edit]

### Edit [GET]

+ Request Ok

    + Headers

            Access-Token: 1234567890123456789012
            Client: abcdefghijklmnopqrstuv
            Uid: darnell_hoppe@hilll.co

+ Response 302 ()

    + Body

            <html><body>You are being <a href="http://127.0.0.1:3000?access-token=1234567890123456789012&amp;client=abcdefghijklmnopqrstuv&amp;client_id=abcdefghijklmnopqrstuv&amp;config=&amp;expiry=1671637127&amp;reset_password=true&amp;token=1234567890123456789012&amp;uid=darnell_hoppe%40hilll.co">redirected</a>.</body></html>

# Group Sessions

## Session [api/v1/users/sign_in]

### Create [POST]

+ Request Bad

    + Headers

            Access-Token: 1234567890123456789012
            Client: abcdefghijklmnopqrstuv
            Uid: kristan_cronin@kovacek.biz

    + Body

            {"user":{"email":"kristan_cronin@kovacek.biz","password":"wrong-password"}}

+ Response 401 ()

    + Body

            {
              "success": false,
              "errors": [
                "Invalid login credentials. Please try again."
              ]
            }

+ Request Ok

    + Headers

            Access-Token: 1234567890123456789012
            Client: abcdefghijklmnopqrstuv
            Uid: sergio@rutherford.name

    + Body

            {"user":{"email":"sergio@rutherford.name","password":"KpMaPeDmByQgR"}}

+ Response 200 ()

    + Headers

            access-token: 1234567890123456789012
            token-type: Bearer
            client: abcdefghijklmnopqrstuv
            expiry: 1671637126
            uid: sergio@rutherford.name

    + Body

            {
              "data": {
                "id": "2",
                "type": "user",
                "attributes": {
                  "createdAt": "2020-12-21T15:38:46.726Z",
                  "email": "sergio@rutherford.name",
                  "firstName": "Eulah Goodwin",
                  "id": 2,
                  "lastName": "Hansen",
                  "provider": "email",
                  "uid": "sergio@rutherford.name",
                  "updatedAt": "2020-12-21T15:38:46.862Z",
                  "username": "denice"
                }
              },
              "links": {
                "self": "http://example.org/api/v1/users/sign_in"
              }
            }

## Session [api/v1/users/sign_out]

### Delete [DELETE]

+ Request Bad

    + Headers

            Access-Token: notvalidtoken
            Client: abcdefghijklmnopqrstuv
            Uid: travis@stamm.io

+ Response 404 ()

    + Body

            {
              "success": false,
              "errors": [
                "User was not found or was not logged in."
              ]
            }

+ Request Ok

    + Headers

            Access-Token: 1234567890123456789012
            Client: abcdefghijklmnopqrstuv
            Uid: sid_kutch@kulas-ondricka.biz

+ Response 200 ()

    + Body

            {
              "success": true
            }

# Group Settings

## Must Update [api/v1/settings/must_update]

### Get [GET]

+ Request Bad

    + Headers

            Access-Token: 1234567890123456789012
            Client: abcdefghijklmnopqrstuv
            Uid: weston.abbott@schamberger-price.info

+ Response 200 ()

    + Headers

            access-token: 1234567890123456789012
            token-type: Bearer
            client: abcdefghijklmnopqrstuv
            expiry: 1671637128
            uid: weston.abbott@schamberger-price.info

    + Body

            {
              "data": {
                "id": "1",
                "type": "setting",
                "attributes": {
                  "key": "min_version",
                  "value": "2.0",
                  "createdAt": "2020-12-21T15:38:48.496Z",
                  "mustUpdate": true
                }
              },
              "links": {
                "self": "http://example.org/api/v1/settings/must_update?device_version=1.0"
              }
            }

+ Request Ok

    + Headers

            Access-Token: 1234567890123456789012
            Client: abcdefghijklmnopqrstuv
            Uid: samantha@roberts-mraz.name

+ Response 200 ()

    + Headers

            access-token: 1234567890123456789012
            token-type: Bearer
            client: abcdefghijklmnopqrstuv
            expiry: 1671637128
            uid: samantha@roberts-mraz.name

    + Body

            {
              "data": {
                "id": "2",
                "type": "setting",
                "attributes": {
                  "key": "min_version",
                  "value": "0.0",
                  "createdAt": "2020-12-21T15:38:48.645Z",
                  "mustUpdate": false
                }
              },
              "links": {
                "self": "http://example.org/api/v1/settings/must_update?device_version=1.0"
              }
            }

# Group Status

## Status [api/v1/status]

### Get [GET]

+ Request Ok

+ Response 200 ()

# Group Users

## Create User [api/v1/users]

### Create [POST]

+ Request Bad

    + Headers

            Access-Token: 1234567890123456789012
            Client: abcdefghijklmnopqrstuv
            Uid: val@harris-labadie.info

    + Body

            {"user":{"email":"not-valid","password":"1YqE4qSt563","username":"shay_buckridge","first_name":"Chae Quigley","last_name":"Champlin","uid":"70d431d5-d270-4bfb-bae7-73507a1fad2a"}}

+ Response 422 ()

    + Body

            {
              "status": "error",
              "data": {
                "id": null,
                "email": "not-valid",
                "allow_password_change": false,
                "first_name": "Chae Quigley",
                "last_name": "Champlin",
                "username": "shay_buckridge",
                "created_at": null,
                "updated_at": null,
                "provider": "email",
                "uid": "not-valid"
              },
              "errors": {
                "email": [
                  "is not an email"
                ],
                "full_messages": [
                  "Email is not an email"
                ]
              }
            }

+ Request Ok

    + Headers

            Access-Token: 1234567890123456789012
            Client: abcdefghijklmnopqrstuv
            Uid: mohamed@heathcote-gleichner.co

    + Body

            {"user":{"email":"renna.orn@schmitt.name","password":"9YmXkAg9","username":"efren.blick","first_name":"Yvonne Littel","last_name":"Bins","uid":"5cadd148-7a16-4910-bca8-5b82b196d22d"}}

+ Response 200 ()

    + Headers

            access-token: 1234567890123456789012
            token-type: Bearer
            client: abcdefghijklmnopqrstuv
            expiry: 1671637127
            uid: renna.orn@schmitt.name

    + Body

            {
              "data": {
                "id": "7",
                "type": "user",
                "attributes": {
                  "createdAt": "2020-12-21T15:38:47.375Z",
                  "email": "renna.orn@schmitt.name",
                  "firstName": "Yvonne Littel",
                  "id": 7,
                  "lastName": "Bins",
                  "provider": "email",
                  "uid": "renna.orn@schmitt.name",
                  "updatedAt": "2020-12-21T15:38:47.430Z",
                  "username": "efren.blick"
                }
              },
              "links": {
                "self": "http://example.org/api/v1/users"
              }
            }

## Show User [api/v1/user]

### Show [GET]

+ Request Ok

    + Headers

            Access-Token: 1234567890123456789012
            Client: abcdefghijklmnopqrstuv
            Uid: annabel.mcdermott@greenfelder.biz

+ Response 200 ()

    + Headers

            access-token: 1234567890123456789012
            token-type: Bearer
            client: abcdefghijklmnopqrstuv
            expiry: 1671637127
            uid: annabel.mcdermott@greenfelder.biz

    + Body

            {
              "data": {
                "id": "5",
                "type": "user",
                "attributes": {
                  "createdAt": "2020-12-21T15:38:47.149Z",
                  "email": "annabel.mcdermott@greenfelder.biz",
                  "firstName": "Clarinda Schulist",
                  "id": 5,
                  "lastName": "Miller",
                  "provider": "email",
                  "uid": "annabel.mcdermott@greenfelder.biz",
                  "updatedAt": "2020-12-21T15:38:47.204Z",
                  "username": "damon.streich"
                }
              },
              "links": {
                "self": "http://example.org/api/v1/user"
              }
            }

## Update User [api/v1/user]

### Update [PUT]

+ Request Ok

    + Headers

            Access-Token: 1234567890123456789012
            Client: abcdefghijklmnopqrstuv
            Uid: darius_zemlak@willms.io

    + Body

            {"data":{"type":"user","id":9,"attributes":{"username":"new username"}}}

+ Response 200 ()

    + Headers

            access-token: 1234567890123456789012
            token-type: Bearer
            client: abcdefghijklmnopqrstuv
            expiry: 1671637127
            uid: darius_zemlak@willms.io

    + Body

            {
              "data": {
                "id": "9",
                "type": "user",
                "attributes": {
                  "createdAt": "2020-12-21T15:38:47.529Z",
                  "email": "darius_zemlak@willms.io",
                  "firstName": "Javier Leffler II",
                  "id": 9,
                  "lastName": "Hudson",
                  "provider": "email",
                  "uid": "darius_zemlak@willms.io",
                  "updatedAt": "2020-12-21T15:38:47.661Z",
                  "username": "new username"
                }
              },
              "links": {
                "self": "http://example.org/api/v1/user"
              }
            }
